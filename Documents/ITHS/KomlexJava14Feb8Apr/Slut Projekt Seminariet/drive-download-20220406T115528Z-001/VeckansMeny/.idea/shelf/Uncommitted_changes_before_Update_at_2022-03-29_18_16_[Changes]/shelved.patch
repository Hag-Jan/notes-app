Index: src/main/resources/templates/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html xmlns:th=\"http://www.thymeleaf.org\">\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Veckans Meny</title>\r\n    <link rel=\"stylesheet\" href=\"/webjars/bootstrap/5.1.1/css/bootstrap.min.css\" type=\"text/css\"/>\r\n\r\n</head>\r\n<body>\r\n\r\n<div class=\"m-3\">\r\n    <a th:href=\"@{/dishes/new}\" class=\"btn btn-info\" role=\"button\">Add Dish</a>\r\n    <a th:href=\"@{/addNewIngredient}\" class=\"btn btn-info\" role=\"button\">Add Ingredient</a>\r\n    <a th:href=\"@{/popularDishes}\" class=\"btn btn-info\" role=\"button\">Popular Dishes Weekly menu</a>\r\n    <a th:href=\"@{/generateRandomWeeklyMenu}\" class=\"btn btn-info\" role=\"button\">Random Weekly Menu</a>\r\n</div>\r\n\r\n<h3>Dishes</h3>\r\n<table class=\"table table-bordered\">\r\n    <thead style=\"background-color: midnightblue; color: white\">\r\n    <tr>\r\n        <th>ID</th>\r\n        <th>Name</th>\r\n        <th>Type</th>\r\n        <th>Likes</th>\r\n        <th>Operations</th>\r\n    </tr>\r\n    </thead>\r\n\r\n    <tbody class=\"table-light\">\r\n\r\n    <th:block th:each=\"dish : ${dishList}\">\r\n        <tr>\r\n            <td th:text=\"${dish.id}\"></td>\r\n            <td th:text=\"${dish.name}\"></td>\r\n            <td th:text=\"${dish.type}\"></td>\r\n            <td th:text=\"${dish.likes}\"></td>\r\n\r\n            <td>\r\n                <a th:href=\"@{/updateDish(dishId=${dish.id})}\" class=\"btn btn-info\" role=\"button\">Edit</a>\r\n                <a th:href=\"@{/deleteDish(dishId=${dish.id})}\" class=\"btn btn-info\" role=\"button\">Delete</a>\r\n                <a th:href=\"@{/likeDish(dishId=${dish.id})}\" class=\"btn btn-info\" role=\"button\">Like</a>\r\n\r\n            </td>\r\n        </tr>\r\n    </th:block>\r\n\r\n    </tbody>\r\n\r\n</table>\r\n\r\n<h3>Ingredients</h3>\r\n<table class=\"table table-bordered\">\r\n    <thead style=\"background-color: midnightblue; color: white\">\r\n    <tr>\r\n        <th>ID</th>\r\n        <th>Name</th>\r\n        <th>Operations</th>\r\n    </tr>\r\n    </thead>\r\n\r\n    <tbody class=\"table-light\">\r\n\r\n    <th:block th:each=\"ingredient : ${ingredientList}\">\r\n        <tr>\r\n            <td th:text=\"${ingredient.id}\"></td>\r\n            <td th:text=\"${ingredient.name}\"></td>\r\n            <td>\r\n                <a th:href=\"@{/updateIngredient(ingredientId=${ingredient.id})}\" class=\"btn btn-info\"\r\n                   role=\"button\">Edit</a>\r\n                <a th:href=\"@{/deleteIngredient(ingredientId=${ingredient.id})}\" class=\"btn btn-info\" role=\"button\">Delete</a>\r\n            </td>\r\n        </tr>\r\n    </th:block>\r\n\r\n    </tbody>\r\n\r\n</table>\r\n\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/index.html b/src/main/resources/templates/index.html
--- a/src/main/resources/templates/index.html	(revision 4195ef2f259ba31e830064d6964db29e760a794e)
+++ b/src/main/resources/templates/index.html	(date 1648567909616)
@@ -15,6 +15,9 @@
     <a th:href="@{/popularDishes}" class="btn btn-info" role="button">Popular Dishes Weekly menu</a>
     <a th:href="@{/generateRandomWeeklyMenu}" class="btn btn-info" role="button">Random Weekly Menu</a>
 </div>
+<div th:if="${message}" class="alert alert-success text-center">
+    <span th:text="${message}"/>
+</div>
 
 <h3>Dishes</h3>
 <table class="table table-bordered">
Index: src/main/java/com/example/veckansmeny/model/Dish.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.veckansmeny.model;\r\n\r\nimport javax.persistence.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n@Entity\r\npublic class Dish {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private Integer id;\r\n    private String name;\r\n    private String type;\r\n    private int likes;\r\n\r\n    public int getLikes() {\r\n        return likes;\r\n    }\r\n\r\n    public void setLikes(int likes) {\r\n        this.likes = likes;\r\n    }\r\n\r\n    @ManyToMany\r\n    List<Ingredient> ingredients;\r\n\r\n    public void setId(Integer id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public Integer getId() {\r\n        return id;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getType() {\r\n        return type;\r\n    }\r\n\r\n    public void setType(String type) {\r\n        this.type = type;\r\n    }\r\n\r\n    public List<Ingredient> getIngredients() {\r\n        if (ingredients == null) {\r\n            ingredients = new ArrayList<>();\r\n        }\r\n        return ingredients;\r\n    }\r\n\r\n    public void setIngredients(List<Ingredient> ingredients) {\r\n        this.ingredients = ingredients;\r\n    }\r\n\r\n    public void addIngredient(Ingredient ingredient) {\r\n        getIngredients().add(ingredient);\r\n        ingredient.getDishes().add(this);\r\n    }\r\n\r\n    public void removeIngredient(Ingredient ingredient) {\r\n        getIngredients().remove(ingredient);\r\n        ingredient.getDishes().remove(this);\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Dish{\" +\r\n                \"id=\" + id +\r\n                \", name='\" + name + '\\'' +\r\n                \", type='\" + type + '\\'' +\r\n                \", ingredients=\" + ingredients +\r\n                '}';\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/veckansmeny/model/Dish.java b/src/main/java/com/example/veckansmeny/model/Dish.java
--- a/src/main/java/com/example/veckansmeny/model/Dish.java	(revision 4195ef2f259ba31e830064d6964db29e760a794e)
+++ b/src/main/java/com/example/veckansmeny/model/Dish.java	(date 1648565841559)
@@ -13,6 +13,9 @@
     private String type;
     private int likes;
 
+    @ManyToMany
+    List<Ingredient> ingredients;
+
     public int getLikes() {
         return likes;
     }
@@ -21,8 +24,6 @@
         this.likes = likes;
     }
 
-    @ManyToMany
-    List<Ingredient> ingredients;
 
     public void setId(Integer id) {
         this.id = id;
Index: src/main/resources/templates/popular_dishes.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/popular_dishes.html b/src/main/resources/templates/popular_weekly_menu.html
rename from src/main/resources/templates/popular_dishes.html
rename to src/main/resources/templates/popular_weekly_menu.html
--- a/src/main/resources/templates/popular_dishes.html	(revision 4195ef2f259ba31e830064d6964db29e760a794e)
+++ b/src/main/resources/templates/popular_weekly_menu.html	(date 1648570309421)
@@ -1,83 +1,37 @@
 <!DOCTYPE html>
-<html xmlns:th="http://www.thymeleaf.org">
 <html lang="en">
+<html lang="en" xmlns:th="http://www.thymeleaf.org">
 <head>
     <meta charset="UTF-8">
-    <title>Veckans Meny</title>
-    <link rel="stylesheet" href="webjars/bootstrap/5.1.1/css/bootstrap.min.css" type="text/css"/>
-
+    <title>Random Weekly Menu</title>
+    <link rel="stylesheet" type="text/css" th:href="@{/webjars/bootstrap/5.1.1/css/bootstrap.min.css}">
 </head>
 <body>
 
-<span class="h1">Monday</span>
-<br/>
-<span class="h3" th:text="${sevenMostPopularDishes.get(0).getName()}"></span>
-<br/>
-<th:block th:each="ingredient : ${sevenMostPopularDishes.get(0).getIngredients()}">
-    <span th:text="${ingredient.getName()}"></span>
-
-</th:block>
-<br/>
-
-<span class="h1">Tuesday</span>
-<br/>
-<span class="h3" th:text="${sevenMostPopularDishes.get(1).getName()}"></span>
-<br/>
-<th:block th:each="ingredient : ${sevenMostPopularDishes.get(1).getIngredients()}">
-    <span th:text="${ingredient.getName()}"></span>
-
-</th:block>
-<br/>
+<h2>Random Weekly Menu</h2>
 
-<span class="h1">Wednesday</span>
-<br/>
-<span class="h3" th:text="${sevenMostPopularDishes.get(2).getName()}"></span>
-<br/>
-<th:block th:each="ingredient : ${sevenMostPopularDishes.get(2).getIngredients()}">
-    <span th:text="${ingredient.getName()}"></span>
+<table class="table table-bordered">
+    <thead style="background-color: midnightblue; color: white">
+    <tr>
+        <th>Week Day</th>
+        <th>Dish</th>
+        <th>Ingredients</th>
+    </tr>
+    </thead>
+    <tbody class="table-light">
 
-</th:block>
-<br/>
-
-<span class="h1">Thursday</span>
-<br/>
-<span class="h3" th:text="${sevenMostPopularDishes.get(3).getName()}"></span>
-<br/>
-<th:block th:each="ingredient : ${sevenMostPopularDishes.get(3).getIngredients()}">
-    <span th:text="${ingredient.getName()}"></span>
-
-</th:block>
-<br/>
-
-<span class="h1">Friday</span>
-<br/>
-<span class="h3" th:text="${sevenMostPopularDishes.get(4).getName()}"></span>
-<br/>
-<th:block th:each="ingredient : ${sevenMostPopularDishes.get(4).getIngredients()}">
-    <span th:text="${ingredient.getName()}"></span>
-
-</th:block>
-<br/>
-
-<span class="h1">Saturday</span>
-<br/>
-<span class="h3" th:text="${sevenMostPopularDishes.get(5).getName()}"></span>
-<br/>
-<th:block th:each="ingredient : ${sevenMostPopularDishes.get(5).getIngredients()}">
-    <span th:text="${ingredient.getName()}"></span>
+    <tr th:each="String, dish : ${weekdays}">
+        <td th:text="${String}">Weekday</td>
+        <td th:text="${sevenMostPopularDishes[dish.index].name}"></td>
+        <td th:text="${sevenMostPopularDishes[dish.index].ingredients}"></td>
+    </tr>
+    </th:block>
+    </tbody>
+</table>
 
-</th:block>
-<br/>
-
-<span class="h1">Sunday</span>
-<br/>
-<span class="h3" th:text="${sevenMostPopularDishes.get(6).getName()}"></span>
-<br/>
-<th:block th:each="ingredient : ${sevenMostPopularDishes.get(6).getIngredients()}">
-    <span th:text="${ingredient.getName()}"></span>
-
-</th:block>
-<br/>
+<a th:href="@{/showShoppingListPopular}" class="btn btn-primary mb-1" role="button">Show Shopping
+    List</a>
+<a th:href="@{/}" class="btn btn-primary mb-1" role="button">Back</a>
 
 
 </body>
Index: src/main/resources/templates/random_weekly_menu.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Random Weekly Menu</title>\r\n    <link rel=\"stylesheet\" type=\"text/css\" th:href=\"@{/webjars/bootstrap/5.1.1/css/bootstrap.min.css}\">\r\n</head>\r\n<body>\r\n\r\n<h2>Random Weekly Menu</h2>\r\n\r\n<table class=\"table table-bordered\">\r\n    <thead style=\"background-color: midnightblue; color: white\">\r\n    <tr>\r\n        <th>Week Day</th>\r\n        <th>Dish</th>\r\n        <th>Ingredients</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody class=\"table-light\">\r\n\r\n    <tr th:each=\"String, dish : ${weekdays}\">\r\n        <td th:text=\"${String}\">Weekday</td>\r\n        <td th:text=\"${dishList[dish.index].name}\"></td>\r\n        <td th:text=\"${dishList[dish.index].ingredients}\"></td>\r\n    </tr>\r\n    </th:block>\r\n    </tbody>\r\n</table>\r\n\r\n<a th:href=\"@{/showShoppingList(dishList=${dishList})}\" class=\"btn btn-primary mb-1\" role=\"button\">Show Shopping\r\n    List</a>\r\n<a th:href=\"@{/}\" class=\"btn btn-primary mb-1\" role=\"button\">Back</a>\r\n\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/templates/random_weekly_menu.html b/src/main/resources/templates/random_weekly_menu.html
--- a/src/main/resources/templates/random_weekly_menu.html	(revision 4195ef2f259ba31e830064d6964db29e760a794e)
+++ b/src/main/resources/templates/random_weekly_menu.html	(date 1648569107826)
@@ -29,7 +29,7 @@
     </tbody>
 </table>
 
-<a th:href="@{/showShoppingList(dishList=${dishList})}" class="btn btn-primary mb-1" role="button">Show Shopping
+<a th:href="@{/showShoppingList}" class="btn btn-primary mb-1" role="button">Show Shopping
     List</a>
 <a th:href="@{/}" class="btn btn-primary mb-1" role="button">Back</a>
 
Index: src/main/java/com/example/veckansmeny/controller/VeckansMenyController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.veckansmeny.controller;\r\n\r\nimport com.example.veckansmeny.model.Dish;\r\nimport com.example.veckansmeny.model.Ingredient;\r\nimport com.example.veckansmeny.service.DishService;\r\nimport com.example.veckansmeny.service.IngredientService;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.ui.Model;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RequestParam;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\n@Controller\r\npublic class VeckansMenyController {\r\n\r\n    @Autowired\r\n    private DishService dishService;\r\n\r\n    @Autowired\r\n    private IngredientService ingredientService;\r\n\r\n    @GetMapping(\"/\")\r\n    public String showHomePage(Model model) {\r\n        List<Dish> listOfDishes = dishService.findAllDishes();\r\n        List<Ingredient> listOfIngredients = ingredientService.getAllIngredients();\r\n\r\n        model.addAttribute(\"dishList\", listOfDishes);\r\n        model.addAttribute(\"ingredientList\", listOfIngredients);\r\n        return \"index\";\r\n    }\r\n\r\n    @GetMapping(\"/en\")\r\n    public String showIndex() {\r\n        return \"index\";\r\n    }\r\n\r\n    @GetMapping(\"/dishes/new\")\r\n    public String showAddDish(Model model) {\r\n        model.addAttribute(\"dish\", new Dish());\r\n        return \"add_dish\";\r\n    }\r\n\r\n    @PostMapping(\"/dish/save\")\r\n    public String saveDish(Model model, Dish dish) {\r\n        dishService.saveDish(dish);\r\n        model.addAttribute(\"dish\", dish);\r\n        model.addAttribute(\"ingredientList\", dish.getIngredients());\r\n        return \"update_dish\";\r\n    }\r\n\r\n    @GetMapping(\"/addNewIngredient\")\r\n    public String showAddNewIngredientPage(Model model) {\r\n        model.addAttribute(\"ingredient\", new Ingredient());\r\n        return \"add_ingredient\";\r\n    }\r\n\r\n    @GetMapping(\"/updateDish\")\r\n    public String showUpdateDishPage(Model model, Integer dishId) {\r\n        Dish dish = dishService.findDishBasedOnId(dishId);\r\n        model.addAttribute(\"dish\", dish);\r\n        model.addAttribute(\"ingredientList\", dish.getIngredients());\r\n        return \"update_dish\";\r\n    }\r\n\r\n    @GetMapping(\"/updateIngredient\")\r\n    public String showUpdateIngredientPage(Model model, Integer ingredientId) {\r\n        Ingredient ingredient = ingredientService.findIngredientById(ingredientId);\r\n        model.addAttribute(\"ingredient\", ingredient);\r\n        model.addAttribute(\"dishList\", ingredient.getDishes());\r\n        return \"update_ingredient\";\r\n    }\r\n\r\n    @GetMapping(\"/deleteDish\")\r\n    public String deleteDish(Integer dishId) {\r\n        dishService.deleteDish(dishId);\r\n        return \"redirect:/\";\r\n    }\r\n\r\n    @GetMapping(\"/deleteIngredient\")\r\n    public String deleteIngredient(Integer ingredientId) {\r\n        Ingredient ingredient = ingredientService.findIngredientById(ingredientId);\r\n        ingredient.removeIngredientFromDishes();\r\n        ingredientService.deleteIngredient(ingredientId);\r\n        return \"redirect:/\";\r\n    }\r\n\r\n    @PostMapping(\"/ingredient/save\")\r\n    public String saveIngredient(Ingredient ingredient) {\r\n        ingredientService.saveIngredient(ingredient);\r\n        return \"redirect:/\";\r\n    }\r\n\r\n    @GetMapping(\"/ingredient/new\")\r\n    public String showAddIngredient(Model model) {\r\n        model.addAttribute(\"ingredient\", new Ingredient());\r\n        return \"add_ingredient\";\r\n    }\r\n\r\n    @GetMapping(\"/updateDish/addIngredient\")\r\n    public String showAddIngredientToDishPage(Model model, Integer dishID) {\r\n        List<Ingredient> ingredientList = ingredientService.getAllIngredients();\r\n        Dish dish = dishService.findDishBasedOnId(dishID);\r\n\r\n        model.addAttribute(\"ingredientList\", ingredientList);\r\n        model.addAttribute(\"dish\", dish);\r\n        return \"add_ingredient_to_dish\";\r\n    }\r\n\r\n    @RequestMapping(\"/updateDish/addIngredient/save\")\r\n    public String addIngredientToDish(Model model, Integer ingredientID, Integer dishID) {\r\n        Dish dish = dishService.findDishBasedOnId(dishID);\r\n        Ingredient ingredient = ingredientService.findIngredientById(ingredientID);\r\n\r\n        dish.addIngredient(ingredient);\r\n        dishService.saveDish(dish);\r\n\r\n        model.addAttribute(\"dish\", dish);\r\n        model.addAttribute(\"ingredientList\", dish.getIngredients());\r\n\r\n        return \"update_dish\";\r\n    }\r\n\r\n    @GetMapping(\"/updateDish/removeIngredient\")\r\n    public String removeIngredientFromDish(Model model, Integer dishID, Integer ingredientId) {\r\n        Dish dish = dishService.findDishBasedOnId(dishID);\r\n        Ingredient ingredient = ingredientService.findIngredientById(ingredientId);\r\n\r\n        dish.removeIngredient(ingredient);\r\n        dishService.saveDish(dish);\r\n\r\n        model.addAttribute(\"dish\", dish);\r\n        model.addAttribute(\"ingredientList\", dish.getIngredients());\r\n\r\n        return \"update_dish\";\r\n    }\r\n\r\n    @GetMapping(\"/updateIngredient/addDish\")\r\n    public String showAddDishToIngredientPage(Model model, Integer ingredientID) {\r\n        List<Dish> dishList = dishService.findAllDishes();\r\n        Ingredient ingredient = ingredientService.findIngredientById(ingredientID);\r\n        model.addAttribute(\"dishList\", dishList);\r\n        model.addAttribute(\"ingredient\", ingredient);\r\n        return \"add_dish_to_ingredient\";\r\n    }\r\n\r\n    @RequestMapping(\"/updateIngredient/addDish/save\")\r\n    public String addDishToIngredient(Model model, Integer ingredientId, Integer dishId) {\r\n        Ingredient ingredient = ingredientService.findIngredientById(ingredientId);\r\n        Dish dish = dishService.findDishBasedOnId(dishId);\r\n        dish.addIngredient(ingredient);\r\n        ingredientService.saveIngredient(ingredient);\r\n        model.addAttribute(\"ingredient\", ingredient);\r\n        model.addAttribute(\"dishList\", ingredient.getDishes());\r\n        return \"update_ingredient\";\r\n    }\r\n\r\n    @GetMapping(\"/updateIngredient/removeDish\")\r\n    public String removeDishFromIngredient(Model model, Integer dishId, Integer ingredientId) {\r\n        Ingredient ingredient = ingredientService.findIngredientById(ingredientId);\r\n        Dish dish = dishService.findDishBasedOnId(dishId);\r\n\r\n        ingredient.removeDish(dish);\r\n        ingredientService.saveIngredient(ingredient);\r\n\r\n        model.addAttribute(\"ingredient\", ingredient);\r\n        model.addAttribute(\"dishList\", ingredient.getDishes());\r\n\r\n        return \"update_ingredient\";\r\n    }\r\n\r\n    @GetMapping(\"/popularDishes\")\r\n    public String showPopularDishesPage(Model model) {\r\n        List<Dish> sevenMostPopularDishes = dishService.findSevenMostPopularDishes();\r\n        model.addAttribute(\"sevenMostPopularDishes\", sevenMostPopularDishes);\r\n\r\n        return \"popular_dishes\";\r\n    }\r\n\r\n    @GetMapping(\"/likeDish\")\r\n    public String likeDish(Model model, Integer dishId) {\r\n        Dish dish = dishService.findDishBasedOnId(dishId);\r\n        dish.setLikes(dish.getLikes() + 1);\r\n        dishService.saveDish(dish);\r\n\r\n        return \"redirect:/\";\r\n    }\r\n\r\n\r\n    @GetMapping(\"/generateRandomWeeklyMenu\")\r\n    public String showRandomWeeklyMenuPage(Model model) {\r\n        if (dishService.findAllDishes().size() < 7)\r\n            return \"redirect:/\";\r\n\r\n        List<Dish> randomDishes = dishService.generateRandomDishes();\r\n\r\n        model.addAttribute(\"dishList\", randomDishes);\r\n\r\n        List<String> weekdays = Arrays.asList(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\");\r\n        model.addAttribute(\"weekdays\", weekdays);\r\n        return \"random_weekly_menu\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/veckansmeny/controller/VeckansMenyController.java b/src/main/java/com/example/veckansmeny/controller/VeckansMenyController.java
--- a/src/main/java/com/example/veckansmeny/controller/VeckansMenyController.java	(revision 4195ef2f259ba31e830064d6964db29e760a794e)
+++ b/src/main/java/com/example/veckansmeny/controller/VeckansMenyController.java	(date 1648570309428)
@@ -10,7 +10,7 @@
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RequestParam;
+import org.springframework.web.servlet.mvc.support.RedirectAttributes;
 
 import java.util.Arrays;
 import java.util.List;
@@ -174,11 +174,19 @@
     }
 
     @GetMapping("/popularDishes")
-    public String showPopularDishesPage(Model model) {
+    public String showPopularDishesPage(Model model, RedirectAttributes redirectAttributes) {
+        if (dishService.findAllDishes().size() < 7) {
+            redirectAttributes.addFlashAttribute("message", "At least 7 dishes needed to generate weekly menu");
+            return "redirect:/";
+        }
+
         List<Dish> sevenMostPopularDishes = dishService.findSevenMostPopularDishes();
         model.addAttribute("sevenMostPopularDishes", sevenMostPopularDishes);
 
-        return "popular_dishes";
+        List<String> weekdays = Arrays.asList("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday");
+        model.addAttribute("weekdays", weekdays);
+
+        return "popular_weekly_menu";
     }
 
     @GetMapping("/likeDish")
@@ -190,11 +198,12 @@
         return "redirect:/";
     }
 
-
     @GetMapping("/generateRandomWeeklyMenu")
-    public String showRandomWeeklyMenuPage(Model model) {
-        if (dishService.findAllDishes().size() < 7)
+    public String showRandomWeeklyMenuPage(Model model, RedirectAttributes redirectAttributes) {
+        if (dishService.findAllDishes().size() < 7) {
+            redirectAttributes.addFlashAttribute("message", "At least 7 dishes needed to generate weekly menu");
             return "redirect:/";
+        }
 
         List<Dish> randomDishes = dishService.generateRandomDishes();
 
@@ -204,4 +213,19 @@
         model.addAttribute("weekdays", weekdays);
         return "random_weekly_menu";
     }
+
+    @GetMapping("/showShoppingList")
+    public String showShoppingList(Model model){
+        List<Ingredient> shoppingList = dishService.getShoppingList(dishService.generateRandomDishes());
+        model.addAttribute("shoppingList", shoppingList);
+        return "shopping_list";
+    }
+
+    @GetMapping("/showShoppingListPopular")
+    public String showShoppingListPopular(Model model){
+        List<Ingredient> shoppingList = dishService.getShoppingList(dishService.findSevenMostPopularDishes());
+        model.addAttribute("shoppingList", shoppingList);
+        return "shopping_list";
+    }
+
 }
